name: ssac-back 

on:  # bracnch main push 감지 시 실행
  push:
    branches: [ main ]

jobs:
  ci:   
    name: Build Image
    runs-on: ubuntu-latest # ubuntu에서 실행

   
    steps:

    - name: Check out code
      uses: actions/checkout@v2 #checkout action 사용
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2 # ecr이 위치하는 리전

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

 #   - name: Get image tag(verion)
 #     id: image
 #     run: |
 #       VERSION=$(echo \${{ github.sha }} | cut -c1-8)
 #       echo VERSION=$VERSION
 #       echo "::set-output name=version::$VERSION"

    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.TOKEN }}

    #DB .env secret add  
    - name: Generate Environment Variables File 
      run: |
        #DB 
        echo "DB_USERNAME=$DB_USERNAME" >> .env
        echo "DB_PASSWORD=$DB_PASSWORD" >> .env
        echo "DB_NAME=$DB_NAME" >> .env
        echo "DB_HOST=$DB_HOST" >> .env
        echo "DB_DIALECT=$DB_DIALECT" >> .env

        #kakao 
        echo "KAKAO_ID=$KAKAO_ID" >> .env
        echo "ACCESS_TOKEN_SECRETT=$ACCESS_TOKEN_SECRET" >> .env
        echo "REFRESH_TOKEN_SECRET=$REFRESH_TOKEN_SECRET" >> .env

        #aws 
        echo "AWS_REGION=$AWS_REGION" >> .env
        echo "AWS_S3_BUCKET_NAME=$AWS_S3_BUCKET_NAME" >> .env

        #front,back 
        echo "FRONTEND_URL=$FRONTEND_URL" >> .env
        echo "BACKEND_URL=$BACKEND_URL" >> .env
        
      env:
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_HOST: ${{ secrets.DB_HOST}}
        DB_DIALECT: ${{ secrets.DB_DIALECT }}

        KAKAO_ID: ${{ secrets.KAKAO_ID }}
        ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
        REFRESH_TOKEN_SECRET: ${{ REFRESH_TOKEN_SECRET}}
        
        AWS_REGION: ${{ secrets.AWS_REGION}}      
        AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}

        FRONTEND_URL: ${{ secrets.FRONTEND_URL}}    
        BACKEND_URL: ${{ secrets.BACKEND_URL }}   
        
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ssac-back # !!!!!!!본인의 ecr로 변경 필요!!!!!!!!
        IMAGE_TAG: ${{ steps.tag_version.outputs.new_tag }}
      run: | # 도커 파일 빌드 후 푸쉬
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
    - name: Checkout for Kustomize repository
      uses: actions/checkout@v2
      with:
           # kubernetes yaml 파일 저장
            repository: Jeon-Min-seok/argo-cd # k8s yaml 파일이 있는 repo
            ref: main  # branch 이름
            token: ${{ secrets.TOKEN }}
            path: argo-cd # 최상위 경로로 repository와 동일하게 설정

        # 새 이미지 버전으로 파일의 태그값 수정
        # cd path 수정
        # kustomize 로 image tag 값 변경
    - name: Update Kubernetes resources
      run: |
        pwd
        cd argo-cd/overlays/dev
        kustomize edit set image ${{ steps.login-ecr.outputs.registry }}/ssac-back=${{ steps.login-ecr.outputs.registry }}/ssac-back:${{ steps.tag_version.outputs.new_tag }}
        cat kustomization.yaml

        # 수정된 kustomization.yaml 파일 commit push
    - name: Commit minifest files
      run: |
        cd argo-cd
        git config --global user.email "jeonms216@gmail.com"
        git config --global user.name "Jeon-Min-seok"
        git commit -am "Update image tag"
        git push -u origin main
